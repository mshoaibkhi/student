version: '3.7'
services:
  react-std:
 #  build:
 #     context: ../../reactapp/testapp/. # Use an image built from the specified dockerfile in the `polling-app-server` directory.
 #     dockerfile: ../../reactapp/testapp/Dockerfile
   image: "react-std:latest" 
   ports:
      - "3000:3000"
   expose:
      - "3000"   
   depends_on:
      - stdmgmt
   environment:
      REACT_APP_SERVICES_URL: "localhost:8080"
   networks:
      std-net:
        ipv4_address: 10.5.0.5
      
       
  stdmgmt:
     
   # build:
   #   context: . # Use an image built from the specified dockerfile in the `polling-app-server` directory.
   #   dockerfile: Dockerfile
    image: "stdmgmt:latest"
    ports:
      - "8080:8080"
    expose:
      - "8080"
    depends_on:
     - stdmgmtdb 
    environment:
      db_url: "10.5.0.7:5432"
      db_name: "postgres" 
      cors: "localhost:3000"    
    networks:
      std-net:
        ipv4_address: 10.5.0.6
#    extra_hosts:
#        - "host.docker.internal:host-gateway"


 # mydb2:
 #  image: "ibmcom/db2"
 #  privileged: true
 #  ports:
 #     - "50000:50000"
 #  expose:
 #     - "50000"
 #  environment:
 #     DB2INST1_PASSWORD: admin123
 #     LICENSE: accept
 #     DBNAME: std
 # 
 #  volumes:
 #     - /e/db:/dbdir
 #  
 #  networks:
 #     std-net:
 #       ipv4_address: 10.5.0.7  
 
 
 
   
  stdmgmtdb:
   image: "postgres"
 
   ports:
      - "8888:5342"
   expose:
      - "8888"
   environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin123
   volumes:
      - /e/db:/dbdir
   
   networks:
      std-net:
        ipv4_address: 10.5.0.7  
  
networks:
  std-net:
    driver: bridge
    ipam:
     config:
       - subnet: 10.5.0.0/16
       
     